# Generated by Django 5.0.1 on 2025-02-20 22:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductFamily',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_family',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('reference_mask', models.CharField(db_index=True, max_length=255, null=True)),
                ('is_line', models.BooleanField(db_index=True, default=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'db_table': 'product_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=15)),
                ('empresa', models.CharField(blank=True, max_length=200, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('codigo_producto', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('precio_base', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio_cotizacion', models.CharField(blank=True, help_text='Folio único de la cotización en formato COT-YYYY-XXXX (ej: COT-2025-0001)', max_length=15, null=True, unique=True)),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('en_revision', 'En Revisión'), ('aprobado', 'Aprobado'), ('cancelado', 'Cancelado')], default='borrador', max_length=20)),
                ('cliente', models.CharField(help_text='Nombre del cliente', max_length=255)),
                ('razon_social', models.CharField(blank=True, help_text='Razón social del cliente', max_length=255, null=True)),
                ('rfc', models.CharField(blank=True, help_text='RFC del cliente', max_length=13, null=True)),
                ('email_cliente', models.EmailField(blank=True, help_text='Email del cliente', max_length=255, null=True)),
                ('telefono_cliente', models.CharField(blank=True, help_text='Teléfono del cliente', max_length=20, null=True)),
                ('direccion_fiscal_calle', models.CharField(blank=True, help_text='Calle de la dirección fiscal', max_length=255, null=True)),
                ('direccion_fiscal_numero', models.CharField(blank=True, help_text='Número exterior de la dirección fiscal', max_length=20, null=True)),
                ('direccion_fiscal_colonia', models.CharField(blank=True, help_text='Colonia de la dirección fiscal', max_length=255, null=True)),
                ('direccion_fiscal_cp', models.CharField(blank=True, help_text='Código postal de la dirección fiscal', max_length=5, null=True)),
                ('direccion_fiscal_ciudad', models.CharField(blank=True, help_text='Ciudad de la dirección fiscal', max_length=255, null=True)),
                ('direccion_fiscal_estado', models.CharField(blank=True, help_text='Estado de la dirección fiscal', max_length=255, null=True)),
                ('proyecto', models.CharField(blank=True, help_text='Nombre del proyecto', max_length=255, null=True)),
                ('atencion_a', models.CharField(blank=True, help_text='Persona a quien va dirigida la cotización', max_length=255, null=True)),
                ('email_representante', models.EmailField(blank=True, help_text='Email del representante de ventas', max_length=255, null=True)),
                ('telefono_representante', models.CharField(blank=True, help_text='Teléfono del representante de ventas', max_length=20, null=True)),
                ('codigo_vendedor', models.CharField(blank=True, help_text='Código identificador del vendedor', max_length=20, null=True)),
                ('proyectista', models.CharField(blank=True, help_text='Nombre del proyectista', max_length=255, null=True)),
                ('unidad_facturacion', models.CharField(choices=[('GEBESA_NACIONAL', 'GEBESA NACIONAL'), ('SALMON_LAGUNA', 'SALMÓN DE LA LAGUNA'), ('OPERADORA_SUCURSALES', 'OPERADORA DE SUCURSALES GEBESA'), ('GEBESA_METROPOLI', 'GEBESA METRÓPOLI')], max_length=50)),
                ('moneda', models.CharField(choices=[('MXN', 'Peso Mexicano'), ('USD', 'Dólar Americano')], default='MXN', max_length=3)),
                ('tipo_cambio', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('vigencia_dias', models.IntegerField(default=30, help_text='Días de vigencia de la cotización')),
                ('condiciones_pago', models.CharField(default='Contado', max_length=255)),
                ('tiempo_entrega', models.CharField(default='20 días hábiles', max_length=255)),
                ('lugar_entrega', models.CharField(default='Planta Cliente', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('version', models.IntegerField(default=1, help_text='Versión de la cotización')),
                ('requiere_autorizacion', models.BooleanField(default=False)),
                ('motivo_autorizacion', models.TextField(blank=True, null=True)),
                ('comentarios_internos', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cotizaciones_aprobadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cotizaciones_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('ejecutivo_ventas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cotizaciones_vendedor', to=settings.AUTH_USER_MODEL, verbose_name='Ejecutivo de ventas')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cotizaciones_modificadas', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Cotización',
                'verbose_name_plural': 'Cotizaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo del bundle', max_length=255)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del bundle y los productos que incluye', null=True)),
                ('descuento_bundle', models.DecimalField(decimal_places=2, default=0, help_text='Porcentaje de descuento aplicado a todo el bundle (0-100)', max_digits=5)),
                ('activo', models.BooleanField(default=True, help_text='Indica si el bundle está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('cotizacion', models.ForeignKey(blank=True, help_text='Cotización a la que pertenece este bundle', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bundles', to='cotizador.cotizacion')),
            ],
            options={
                'verbose_name': 'Bundle de Productos',
                'verbose_name_plural': 'Bundles de Productos',
                'db_table': 'cotizador_bundle',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CotizadorImagenproducto',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('clave_padre', models.CharField(db_index=True, help_text='Clave del producto que coincide con reference_mask de ProductTemplate', max_length=50)),
                ('url', models.CharField(help_text='URL de la imagen en Supabase Storage', max_length=2048)),
            ],
            options={
                'verbose_name': 'Imagen de Producto',
                'verbose_name_plural': 'Imágenes de Productos',
                'db_table': 'cotizador_imagenproducto',
                'managed': True,
                'indexes': [models.Index(fields=['clave_padre'], name='idx_clave_padre'), models.Index(fields=['clave_padre', 'url'], name='idx_clave_url')],
            },
        ),
        migrations.CreateModel(
            name='DetalleCotizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_producto', models.CharField(max_length=255, verbose_name='Nombre del Producto')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('cantidad', models.IntegerField(default=1, verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio Unitario')),
                ('descuento', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Descuento (%)')),
                ('tipo_producto', models.CharField(choices=[('producto', 'Producto'), ('servicio', 'Servicio')], default='producto', max_length=50, verbose_name='Tipo de Producto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('cotizacion', models.ForeignKey(blank=True, db_column='cotizacion_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='cotizador.cotizacion', verbose_name='Cotización')),
            ],
            options={
                'verbose_name': 'Detalle de Cotización',
                'verbose_name_plural': 'Detalles de Cotización',
                'db_table': 'cotizador_detallecotizacion',
                'ordering': ['created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductoBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_producto', models.CharField(help_text='Nombre del producto al momento de agregarlo al bundle', max_length=255)),
                ('cantidad', models.IntegerField(default=1, help_text='Número de unidades de este producto en el bundle')),
                ('precio_unitario', models.DecimalField(decimal_places=2, help_text='Precio por unidad del producto al momento de agregarlo al bundle', max_digits=10)),
                ('descuento', models.DecimalField(decimal_places=2, default=0, help_text='Porcentaje de descuento individual para este producto (0-100)', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('bundle', models.ForeignKey(help_text='Bundle al que pertenece este producto', on_delete=django.db.models.deletion.CASCADE, related_name='productos_bundle', to='cotizador.bundle')),
                ('producto', models.ForeignKey(blank=True, help_text='Producto del catálogo. Puede ser nulo si el producto se elimina', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cotizador.producto')),
            ],
            options={
                'verbose_name': 'Producto de Bundle',
                'verbose_name_plural': 'Productos de Bundle',
                'db_table': 'cotizador_productobundle',
                'managed': True,
            },
        ),
    ]

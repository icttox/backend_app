# Generated by Django 5.0.1 on 2025-02-13 04:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=30, verbose_name='Apellido')),
                ('phone', models.CharField(blank=True, help_text='Número de teléfono del usuario', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="El número debe estar en formato: '+999999999'. Hasta 15 dígitos permitidos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Teléfono')),
                ('area', models.CharField(blank=True, choices=[('RH', 'Recursos Humanos'), ('VENTAS', 'Ventas'), ('COMPRAS', 'Compras'), ('PROD', 'Producción'), ('TI', 'Tecnología')], help_text='Área a la que pertenece el usuario', max_length=20, null=True, verbose_name='Área')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Última IP de inicio de sesión')),
                ('created_by', models.ForeignKey(blank=True, help_text='Usuario administrador que creó esta cuenta', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='Biografía')),
                ('require_password_change', models.BooleanField(default=True, help_text='Indica si el usuario debe cambiar su contraseña en el próximo inicio de sesión', verbose_name='Requiere cambio de contraseña')),
                ('last_password_change', models.DateTimeField(auto_now_add=True, help_text='Fecha del último cambio de contraseña', verbose_name='Último cambio de contraseña')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, verbose_name='Intentos fallidos de inicio de sesión')),
                ('last_failed_login', models.DateTimeField(blank=True, null=True, verbose_name='Último intento fallido de inicio de sesión')),
                ('is_locked', models.BooleanField(default=False, help_text='Indica si la cuenta está bloqueada por intentos fallidos de inicio de sesión', verbose_name='Cuenta bloqueada')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
    ]
